---
title: win TortoiseSVN客户端使用

---

## 前言：

SVN(Subversion)是一种版本控制工具，跟Git原理和操作基本一致

什么是版本控制

把文件系统分为若干个版本，从创建的时刻起称为版本1，后面进行了一些修改或者其他的操作，提交上去后就变成了版本2，记录你的每一次版本操作，就是版本控制的用途。

## 准备环境

1. Windows10
2. [TortoiseSVN](https://tortoisesvn.net/)   中文包可选

## 安装SVN

官网提供的文件主要有三个，安装包、语言包、文档。

![SVN软件包截图.jpg](/TortoiseSVN的使用/SVN软件包截图.jpg)

双击安装包安装，后续在开发环境(IDEA/Pycharm/VS)中集成SVN工具，需要在选择组件的界面勾选上command line client tools，安装位置自由选择

![](/TortoiseSVN的使用/SVN客户端安装截图.jpg)

选好之后是这样

![](/TortoiseSVN的使用/SVN选择完成截图.jpg)

后面直接next就好了

语言包安装没有其他选项，安装位置都不用选，一路默认就好。

安装完成是没有界面显示的，在文件夹中右键鼠标能看见TortoiseSVN的选项即安装成功

## SVN的使用

在服务器仓库已经建立好的情况下，在客户端使用SVN连接服务器

首先要和SVN服务端仓库建立连接，选择一个空的文件夹点击鼠标右键，能看到SVN Checkout 和 TortoiseSVN的选项

<img src="/TortoiseSVN的使用/SVN右键菜单.jpg" style="zoom: 75%;" />



点击SVN Checkout，出现选择仓库界面，IP是SVN服务器所在的位置，后面接自己的仓库，路径根据服务器配置的不同不一定一致，下面是自己本地的路径，可以自由选择

<img src="/TortoiseSVN的使用/SVNCheckout.jpg" alt="SVNCheckout" style="zoom:75%;" />

如果配置是对的会出现输入账号密码界面，账号密码由管理员设定好。

<img src="/TortoiseSVN的使用/SVN输入密码.jpg" alt="inputAcount" style="zoom:80%;" />

填写完成后会从仓库下载文件

<img src="/TortoiseSVN的使用/Checkout成功.jpg" style="zoom:75%;" />

成功后在文件夹内能看到一个.svn文件夹和其他从仓库下载下来的东西，在.svn文件夹中存放的是当前文件夹和远程仓库的连接信息，和文件夹内文件版本信息等，想要删除当前文件夹和远程仓库的联系，删除.svn文件即可。

<img src="/TortoiseSVN的使用/Checkout后文件夹.jpg" style="zoom:80%;" />

到这里，SVN和远程仓库的连接就做好了，下面介绍一些SVN版本控制最常用的一些操作。

在文件夹内空白处右击鼠标并移动到TortoiseSVN上会看到SVN提供的功能菜单，虽然功能很多，常用的功能一般就五六个，还是很容易上手的。

<img src="/TortoiseSVN的使用/连接远程仓库之后右键界面.jpg" style="zoom: 70%;" />

我们新建一个文件夹并右键，可以看到功能没有刚才多，因为新建的这个文件夹还没有与远程仓库建立联系，我们对一个新建的或者从别处复制过来的文件/文件夹要和远程版本库建立联系，点击Tortoise -> Add

![](/TortoiseSVN的使用/SVNadd操作.jpg)

点击之后会有一步确认操作，选择需要Add的文件/文件夹点击OK就和版本库建立了联系，点击之后可以看到文件夹上出现了一个蓝色小加号，这个标志代表在本地已经将这个文件纳入版本控制，上面的绿色对勾表示这个文件和远端仓库版本是一致的，常见的图标只有三个，分别为红绿蓝，绿蓝已经说过，红色感叹号代表这个文件经过修改，和远程版本不一致。

![](/TortoiseSVN的使用/Add图标展示.jpg)

用同样的方式在测试文件夹中新建一个测试文件并添加到版本控制，右键文件

<img src="/TortoiseSVN的使用/测试文件右键.jpg" style="zoom:60%;" />

可以发现选项没有之前右键空白处的多，因为这个文件在远程仓库中不存在，所以有些操作并不能使用。我们在文件中先写一些东西

![](/TortoiseSVN的使用/测试文件输入创建信息.jpg)

退回到上一层右键点击需要上传的文件夹或者空白处点击SVN Commit

![](/TortoiseSVN的使用/commit操作.jpg)

点击之后会看到详细的界面

<img src="/TortoiseSVN的使用/commit详细界面.jpg" style="zoom:67%;" />

最上面可以看到我们要上传的路径，下面有输入Message的窗口，相当于备注信息，备注这次操作是进行了哪些操作，在TortoiseGit工具中要求强制写备注，不写不可以上传，说明备注的重要程度，写了备注以后看也会清晰很多，建议每次都要写。

点击OK之后就上传成功了，我们把测试文件中的内容修改一下

<img src="/TortoiseSVN的使用/测试文件第一次修改.jpg" style="zoom: 67%;" />

能看到文件前面变成了红色感叹号，前面说过红色感叹号表示内容相比较之前的版本发生了变化

![](/TortoiseSVN的使用/修改感叹号.jpg)

右键文件选择Diff功能

<img src="/TortoiseSVN的使用/Diff功能.jpg" style="zoom:80%;" />

能看到本地文件和远程版本修改了哪些信息，这里我自己修改了对比工具，大家看到SVN自带的比较工具界面可能不太一样，不过不影响使用。可以看到本地文件相比于远程仓库从第三行开始有了修改，修改的部分有高亮显示。

![](/TortoiseSVN的使用/Diff显示.jpg)

退出比较界面，我们再提交(Commit)一次文件，然后再修改一次再提交，这样就产生了3个版本信息，分别为创建、第一次修改、第二次修改，右击文件选择ShowLog功能

<img src="/TortoiseSVN的使用/查看Log.jpg" style="zoom:67%;" />

就可以看到之前这个文件都有哪些改动，对每个版本都可以查看和前一个版本的改动信息，可以选择回退到选中版本或者把对应版本文件下载到本地查看，还有一些其他功能。

<img src="/TortoiseSVN的使用/版本日志界面.jpg" style="zoom:80%;" />

SVN客户端的使用基本就是这些，还有很多功能可以查看官方文档或者查找其他资料。




